1. 比较添加了cpython的分词和语法分析后的准确率
 - 在服务器上编译通过cpython版本
 - 将token-rnn-tensorflow的分词改成cpython版本的，并运行，测试准确率
 - 在生成结果中增加filter，看看之后的准确率变化
 - 测试前后的准确率变化了多少


2. 比较添加了tensorflow的API（利用正则进行加权？）后的准确率提升数值
 - 测试当前准确率
 - 使用正则API并加权后，测试接下来的准确率？


3. 比较将生成的python改成C++后，准确率提升数值
 - 测试单个test的平均运行时间
 - 测试：随机从测试样例中抽取100个token丢进去，看看生成新的30个token所需要的时间
 - 将test从python改成C++版本，同样进行上述两个测试
